Yλοποίηση βασικού shell:

Αρχικά, το shell μου λειτουργεί ως εξής: Υπάρχει ένα "άπειρο" loop, το οποίο κάθε φορά τυπώνει το prompt του shell και μετά με τη συνάρτηση getLine() διαβάζει την εντολή που θα εισάγει ο χρήστης. Αμέσως μετά τη σπάει σε "λέξεις" με τη splitString() και την αποθηκεύει στον πίνακα απο strings args. Αμέσως μετά κάνει fork ένα νέο process με το οποίο θα εκτελέσει την εντολή που δώθηκε από το χρήστη. To parent process περιμενει τη νέα διαδικασία να τελειώσει πριν συνεχίσει. Η νέα διαδικασία τώρα καλέι την executeCommand() που ελέγχει τι εντολή δόθηκε και την εκτελεί. Εάν δόθηκε η εντολή exit τότε στέλνεται SIGKILL στο parent process και αμέσως μετά στο ίδιο το child process με αποτέλεσμα να τερματίσει το shell.


Υλοποίηση pipes:

Μόλις δωθεί η εντολή και καλεστεί η executeCommand(), αρχικά γίνεται έλεγχος για τον χαρακτήρα '|' μέσα στην εντολή, για να δουμε εάν πρέπει να γίνει χρήση pipes. Πάντα το process που είναι να εκτελέσει την εντολή που δώθηκε θα εκτελέι την τελευταία εντολή στα pipes. Εάν έχουμε ένα pipe, γίνεται fork ένα νέο process (ας το πουμε tmpProcess1), το οποίο θα εκτελέσει τη πρώτη εντολή στα pipes, μετά θα συνδεθεί το output του με το input του parent process του ( το αρχικό process που ήταν να εκτελέσει την εντολή) με redirection (dup2()) μέσω του pipe που φτιάχτηκε. Στη συνέχεια, θα γίνει kill το tmpProcess1 και θα επιστρέψουμε στην εκτέλεση του parent process του το οποίο θα έχει λάβει το κατάλληλο input μέσω του pipe και θα εκτελέσει τη δέυτερη εντολή.

Εάν τώρα έχουμε 2 pipes, τότε θα γίνει το ίδιο μέχρι το fork του tmpProcess1, απλά μετά θα χρειαστεί να γίνει άλλο ένα fork για άλλο ένα νέο process (ας το πούμε tmpProcess2), το οποίο θα εκτελέσει τη πρώτη εντολή. Δημιουργείται ένα 2ο pipe, το tmpProcess2 εκτελέι τη πρώτη εντολή, περνάει το output της μέσω του δεύτερου pipe στο tmpProcess1 το οποίο θα εκτελέσει τη δεύτερη εντολή, και μετά αυτό μετά με τη σειρά του περνάει το output στο parent process τους μέσω του πρώτου pipe, και το parent process τους εκτελέι μετά τη τρίτη εντολή.


Υλοποίηση επαναφοράς process στο foreground:

Πριν γίνει το fork για το νέο process αφού διαβαστεί η εντολή, αναζητιέται στην εντολή ο χαρακτήρας '&'. Εάν βρεθεί η μεταβλητή bgCheck γίνεται 1, και ο χαρακτήρας αυτός αντικαθηστάται με NULL. Όταν γίνει fork το νέο process, γίνεται έλεγχος εάν η μεταβλητή bgCheck είναι 1. Εάν είναι 1, τότε το process αυτό μπαίνει σε ένα νέο process group, και στέλνεται SIGSTOP σε αυτό που το αναγκάζει να πάει στο background και περιμένει. Μετά επιστρέφουμε στο parent process που εκτλελέι την επόμενη εντολή. Εάν αυτή είναι fg και ένα pid, τότε στέλνεται SIGCONT στο process με το pid αυτό και συνεχίζεται η εκτέλεση του από εκεί που σταμάτησε.
